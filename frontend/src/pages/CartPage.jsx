import React, { useState, useEffect } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { useAuthStore } from '../features/auth/model';
import formatImageUrl from '../shared/utils/imageUrl';
import Button from '../shared/ui/Button';
import { api } from '../shared/utils/apiClient';

const CartPage = () => {
  const [cartItems, setCartItems] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [orderPlaced, setOrderPlaced] = useState(false);
  const navigate = useNavigate();
  const { isAuth, user } = useAuthStore();
  const [deliveryInfo, setDeliveryInfo] = useState({
    address: '',
    phone: '',
    comment: '',
    paymentMethod: 'card'
  });
  const [orderStep, setOrderStep] = useState(1); // 1 - –∫–æ—Ä–∑–∏–Ω–∞, 2 - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if (!isAuth) {
      setError("–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è");
      setLoading(false);
      return;
    }

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã
    fetchCart();
  }, [isAuth]);

  const fetchCart = async () => {
    try {
      setLoading(true);
      const response = await api.get('/api/cart');
      setCartItems(response.data);
      setLoading(false);
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ—Ä–∑–∏–Ω—ã');
      setLoading(false);
    }
  };

  const updateQuantity = async (itemId, quantity) => {
    try {
      await api.put(`/api/cart/${itemId}`, { quantity });
      fetchCart(); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞');
    }
  };

  const removeItem = async (itemId) => {
    try {
      await api.delete(`/api/cart/${itemId}`);
      fetchCart(); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
    }
  };

  const handleCheckout = async () => {
    try {
      await api.post('/api/orders', {
        items: cartItems.map(item => ({
          cartItemId: item.id,
          quantity: item.quantity
        })),
        ...deliveryInfo
      });

      // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
      try {
        await api.delete('/api/cart');
      } catch (clearError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã:', clearError);
      }

      setOrderPlaced(true);
      setTimeout(() => {
        navigate('/');
      }, 3000);
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
    }
  };

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (loading) {
    return (
      <div className="container mx-auto py-16 text-center">
        <div className="loader mx-auto mb-4"></div>
        <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É...</p>
      </div>
    );
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  if (!isAuth) {
    return (
      <div className="container mx-auto py-16 text-center">
        <h1 className="text-3xl font-bold mb-6">üõí –ö–æ—Ä–∑–∏–Ω–∞</h1>
        <p className="mb-6">–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è</p>
        <Button onClick={() => navigate('/login')}>
          –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
        </Button>
      </div>
    );
  }

  // –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω
  if (orderPlaced) {
    return (
      <div className="container mx-auto py-16 text-center">
        <h1 className="text-3xl font-bold mb-6">üéâ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h1>
        <p className="text-xl mb-4">–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –ú—ã —É–∂–µ –≥–æ—Ç–æ–≤–∏–º –≤–∞—à –∑–∞–∫–∞–∑.</p>
        <p>–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...</p>
      </div>
    );
  }

  // –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
  const total = cartItems.reduce((sum, item) => {
    const price = item.customBouquet ? item.customBouquet.price : item.bouquet.price;
    return sum + price * item.quantity;
  }, 0);

  return (
    <div className="container mx-auto py-16">
      <h1 className="text-3xl font-bold mb-8">üõí –ö–æ—Ä–∑–∏–Ω–∞</h1>

      {cartItems.length === 0 ? (
        <div className="text-center py-12 bg-white rounded-lg shadow-md">
          <p className="mb-6 text-xl">–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
          <Button onClick={() => navigate('/catalog')}>
            –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
          </Button>
        </div>
      ) : (
        <div className="bg-white rounded-lg shadow-md p-6">
          {orderStep === 1 ? (
            <div className="space-y-6">
              {cartItems.map((item) => (
                <div key={item.id} className="flex flex-col md:flex-row gap-6 p-4 border-b">
                  <div className="md:w-1/4">
                    <img
                      src={formatImageUrl(
                        item.customBouquet ? item.customBouquet.image : item.bouquet.image
                      )}
                      alt={item.customBouquet ? item.customBouquet.name : item.bouquet.name}
                      className="w-full h-48 object-cover rounded-lg"
                    />
                  </div>
                  <div className="md:w-3/4 flex flex-col justify-between">
                    <div>
                      <h3 className="text-xl font-semibold mb-2">
                        {item.customBouquet ? item.customBouquet.name : item.bouquet.name}
                      </h3>
                      <p className="text-gray-600 mb-4">
                        {item.customBouquet ? item.customBouquet.description : item.bouquet.description}
                      </p>
                      <p className="text-xl font-bold text-primary mb-4">
                        {(item.customBouquet ? item.customBouquet.price : item.bouquet.price) * item.quantity} ‚ÇΩ
                      </p>
                    </div>
                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-4">
                        <button
                          onClick={() => updateQuantity(item.id, item.quantity - 1)}
                          disabled={item.quantity <= 1}
                          className="w-8 h-8 flex items-center justify-center bg-gray-200 rounded-full disabled:opacity-50"
                        >
                          -
                        </button>
                        <span className="font-medium">{item.quantity}</span>
                        <button
                          onClick={() => updateQuantity(item.id, item.quantity + 1)}
                          className="w-8 h-8 flex items-center justify-center bg-gray-200 rounded-full"
                        >
                          +
                        </button>
                      </div>
                      <Button
                        variant="secondary"
                        onClick={() => removeItem(item.id)}
                      >
                        –£–¥–∞–ª–∏—Ç—å
                      </Button>
                    </div>
                  </div>
                </div>
              ))}

              <div className="flex flex-col md:flex-row justify-between items-center pt-6">
                <h3 className="text-2xl font-bold mb-4 md:mb-0">–ò—Ç–æ–≥–æ: {total} ‚ÇΩ</h3>
                <Button onClick={() => setOrderStep(2)}>
                  –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                </Button>
              </div>
            </div>
          ) : (
            <div className="max-w-lg mx-auto">
              <h3 className="text-2xl font-semibold mb-6">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h3>

              <div className="space-y-4 mb-6">
                <div>
                  <label className="block text-gray-700 mb-1">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</label>
                  <input
                    type="text"
                    placeholder="–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏"
                    value={deliveryInfo.address}
                    onChange={(e) => setDeliveryInfo({ ...deliveryInfo, address: e.target.value })}
                    className="w-full border border-gray-300 rounded-md p-2"
                  />
                </div>

                <div>
                  <label className="block text-gray-700 mb-1">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                  <input
                    type="text"
                    placeholder="–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω"
                    value={deliveryInfo.phone}
                    onChange={(e) => setDeliveryInfo({ ...deliveryInfo, phone: e.target.value })}
                    className="w-full border border-gray-300 rounded-md p-2"
                  />
                </div>

                <div>
                  <label className="block text-gray-700 mb-1">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É</label>
                  <textarea
                    placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
                    value={deliveryInfo.comment}
                    onChange={(e) => setDeliveryInfo({ ...deliveryInfo, comment: e.target.value })}
                    className="w-full border border-gray-300 rounded-md p-2 h-24"
                  ></textarea>
                </div>

                <div>
                  <label className="block text-gray-700 mb-1">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</label>
                  <select
                    value={deliveryInfo.paymentMethod}
                    onChange={(e) => setDeliveryInfo({ ...deliveryInfo, paymentMethod: e.target.value })}
                    className="w-full border border-gray-300 rounded-md p-2"
                  >
                    <option value="card">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</option>
                    <option value="cash">–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</option>
                  </select>
                </div>
              </div>

              <div className="flex justify-between">
                <Button
                  variant="secondary"
                  onClick={() => setOrderStep(1)}
                >
                  –ù–∞–∑–∞–¥
                </Button>
                <Button
                  disabled={!deliveryInfo.address || !deliveryInfo.phone}
                  onClick={handleCheckout}
                >
                  –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑
                </Button>
              </div>
            </div>
          )}
        </div>
      )}
    </div>
  );
};

export default CartPage;
