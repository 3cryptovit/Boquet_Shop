import React, { useEffect, useState } from 'react';
import { useParams, Link, useNavigate } from 'react-router-dom';
import { useBouquetsStore, useFavoritesStore } from '../features/bouquets/model';
import { useAuthStore } from '../features/auth/model';
import { addToCart } from '../features/bouquets/api';
import formatImageUrl from '../shared/utils/imageUrl';
import Button from '../shared/ui/Button';
import Modal from '../shared/ui/Modal';

const BouquetDetailPage = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [showLoginModal, setShowLoginModal] = useState(false);
  const { currentBouquet, isLoading, error, fetchBouquetById } = useBouquetsStore();
  const { isAuth } = useAuthStore();
  const { isFavorite, addToFavorites, removeFromFavorites } = useFavoritesStore();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±—É–∫–µ—Ç–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchBouquetById(id);
  }, [id, fetchBouquetById]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –±—É–∫–µ—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
  const isFavorited = currentBouquet ? isFavorite(currentBouquet.id) : false;

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
  const handleAddToCart = async () => {
    if (!isAuth) {
      setShowLoginModal(true);
      return;
    }

    try {
      await addToCart(id);
      alert('–ë—É–∫–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –±—É–∫–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É');
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const handleToggleFavorite = () => {
    if (!currentBouquet) return;

    if (!isAuth) {
      setShowLoginModal(true);
      return;
    }

    if (isFavorited) {
      removeFromFavorites(currentBouquet.id);
    } else {
      addToFavorites(currentBouquet);
    }
  };

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (isLoading) {
    return (
      <div className="container mx-auto py-16 text-center">
        <div className="loader mx-auto mb-4"></div>
        <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—É–∫–µ—Ç–µ...</p>
      </div>
    );
  }

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏
  if (error) {
    return (
      <div className="container mx-auto py-16 text-center">
        <h2 className="text-2xl text-red-600 mb-4">–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</h2>
        <p className="mb-6">{error}</p>
        <div className="flex gap-4 justify-center">
          <Button onClick={() => fetchBouquetById(id)}>–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</Button>
          <Button variant="secondary" onClick={() => navigate('/catalog')}>
            –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
          </Button>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –±—É–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
  if (!currentBouquet) {
    return (
      <div className="container mx-auto py-16 text-center">
        <h2 className="text-2xl font-semibold mb-4">–ë—É–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
        <p className="mb-6">–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±—É–∫–µ—Ç —Å ID {id} –Ω–µ –Ω–∞–π–¥–µ–Ω.</p>
        <Button variant="primary" onClick={() => navigate('/catalog')}>
          –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
        </Button>
      </div>
    );
  }

  return (
    <div className="py-16">
      <div className="container mx-auto">
        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
        <div className="mb-8">
          <Link
            to="/catalog"
            className="inline-flex items-center text-gray-600 hover:text-primary transition-colors"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–∞–ª–æ–≥—É
          </Link>
        </div>

        <div className="bg-white/90 backdrop-blur-md rounded-lg shadow-md overflow-hidden">
          <div className="md:flex">
            {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–∫–µ—Ç–∞ */}
            <div className="md:w-1/2">
              <div className="relative pb-[100%] md:pb-0 md:h-full">
                <img
                  src={formatImageUrl(currentBouquet.image)}
                  alt={currentBouquet.name}
                  className="absolute inset-0 w-full h-full object-cover md:absolute"
                />
              </div>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—É–∫–µ—Ç–µ */}
            <div className="md:w-1/2 p-6 md:p-8">
              <div className="flex justify-between items-start mb-4">
                <h1 className="text-3xl font-bold text-gray-800">
                  {currentBouquet.name}
                </h1>
                <button
                  onClick={handleToggleFavorite}
                  className="bg-white rounded-full w-10 h-10 flex items-center justify-center shadow-md transition-transform hover:scale-110"
                >
                  {isFavorited ? '‚ù§Ô∏è' : 'ü§ç'}
                </button>
              </div>

              <div className="text-2xl font-bold text-primary mb-6">
                {currentBouquet.price} ‚ÇΩ
              </div>

              <div className="mb-6">
                <p className="text-gray-700 leading-relaxed">
                  {currentBouquet.description || '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –±—É–∫–µ—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö —Ü–≤–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–æ–π–¥–µ—Ç –¥–ª—è –ª—é–±–æ–≥–æ —Å–ª—É—á–∞—è.'}
                </p>
              </div>

              {/* –°–æ—Å—Ç–∞–≤ –±—É–∫–µ—Ç–∞, –µ—Å–ª–∏ –µ—Å—Ç—å */}
              {currentBouquet.flowers && currentBouquet.flowers.length > 0 && (
                <div className="mb-8">
                  <h3 className="text-lg font-semibold mb-2">–°–æ—Å—Ç–∞–≤ –±—É–∫–µ—Ç–∞:</h3>
                  <ul className="list-disc list-inside text-gray-700">
                    {currentBouquet.flowers.map((flower, index) => (
                      <li key={index}>
                        {flower.name || flower.type} - {flower.color || '—Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã–π'}
                      </li>
                    ))}
                  </ul>
                </div>
              )}

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Å—Ç–æ–º–Ω–æ–º –±—É–∫–µ—Ç–µ */}
              {currentBouquet.isCustom && (
                <div className="mb-6 p-3 bg-blue-50 rounded-md text-blue-700">
                  <p>–≠—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –±—É–∫–µ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ –Ω–∞—à–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ.</p>
                </div>
              )}

              {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
              <div className="flex flex-col sm:flex-row gap-4">
                <Button
                  variant="primary"
                  className="flex-1"
                  onClick={handleAddToCart}
                >
                  –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                </Button>
                <Button
                  variant="outline"
                  className="flex-1"
                  onClick={() => navigate('/constructor')}
                >
                  –°–æ–∑–¥–∞—Ç—å –ø–æ—Ö–æ–∂–∏–π –±—É–∫–µ—Ç
                </Button>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      <Modal
        isOpen={showLoginModal}
        onClose={() => setShowLoginModal(false)}
        title="–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"
        size="small"
      >
        <p className="mb-4">
          –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—É–∫–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É –∏–ª–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.
        </p>
        <div className="flex justify-end gap-3">
          <Button
            variant="secondary"
            onClick={() => setShowLoginModal(false)}
          >
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button
            variant="primary"
            onClick={() => navigate('/login')}
          >
            –í–æ–π—Ç–∏
          </Button>
        </div>
      </Modal>
    </div>
  );
};

export default BouquetDetailPage;
