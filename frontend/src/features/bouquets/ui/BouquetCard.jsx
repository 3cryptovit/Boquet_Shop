import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useAuthStore } from '../../auth/model';
import { useFavoritesStore } from '../model';
import { addToCart } from '../api';
import formatImageUrl from '../../../shared/utils/imageUrl';
import Modal from '../../../shared/ui/Modal';
import Button from '../../../shared/ui/Button';

const BouquetCard = ({ bouquet }) => {
  const [showAuthModal, setShowAuthModal] = useState(false);
  const [actionType, setActionType] = useState(null); // 'cart' –∏–ª–∏ 'favorite'
  const navigate = useNavigate();
  const { isAuth } = useAuthStore();
  const { isFavorite, addToFavorites, removeFromFavorites } = useFavoritesStore();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –±—É–∫–µ—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
  const isFavorited = isFavorite(bouquet.id);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
  const handleAddToCart = async (e) => {
    e.preventDefault();
    e.stopPropagation();

    if (!isAuth) {
      setActionType('cart');
      setShowAuthModal(true);
      return;
    }

    try {
      await addToCart(bouquet.id);
      alert('–ë—É–∫–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –±—É–∫–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É');
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const handleToggleFavorite = (e) => {
    e.preventDefault();
    e.stopPropagation();

    if (!isAuth) {
      setActionType('favorite');
      setShowAuthModal(true);
      return;
    }

    try {
      if (isFavorited) {
        removeFromFavorites(bouquet.id);
      } else {
        addToFavorites(bouquet);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º:', error);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleLogin = () => {
    navigate('/login');
  };

  return (
    <>
      <div className="card fade-in hover:shadow-lg transition-all duration-300">
        <Link to={`/bouquet/${bouquet.id}`} className="block">
          <div className="relative overflow-hidden rounded-t-lg pb-[75%]">
            <img
              src={formatImageUrl(bouquet.image)}
              alt={bouquet.name}
              className="absolute inset-0 w-full h-full object-cover transition-transform duration-300 hover:scale-105"
            />
            <button
              onClick={handleToggleFavorite}
              className="absolute top-3 right-3 bg-white/90 rounded-full w-10 h-10 flex items-center justify-center shadow-md transition-transform hover:scale-110"
            >
              {isFavorited ? '‚ù§Ô∏è' : 'ü§ç'}
            </button>
          </div>

          <div className="p-4">
            <h3 className="text-xl font-semibold mb-2 text-gray-800">{bouquet.name}</h3>

            <p className="text-gray-600 text-sm mb-4 line-clamp-2">
              {bouquet.description || '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –±—É–∫–µ—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö —Ü–≤–µ—Ç–æ–≤'}
            </p>

            <div className="flex items-center justify-between">
              <span className="text-xl font-bold text-primary">
                {bouquet.price} ‚ÇΩ
              </span>

              <Button
                onClick={handleAddToCart}
                variant="primary"
                size="small"
              >
                –í –∫–æ—Ä–∑–∏–Ω—É
              </Button>
            </div>
          </div>
        </Link>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      <Modal
        isOpen={showAuthModal}
        onClose={() => setShowAuthModal(false)}
        title="–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"
        size="small"
      >
        <p className="mb-4">
          {actionType === 'cart'
            ? '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—É–∫–µ—Ç–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.'
            : '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—É–∫–µ—Ç–æ–≤ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.'}
        </p>
        <div className="flex justify-end gap-3">
          <Button
            variant="secondary"
            onClick={() => setShowAuthModal(false)}
          >
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button
            variant="primary"
            onClick={handleLogin}
          >
            –í–æ–π—Ç–∏
          </Button>
        </div>
      </Modal>
    </>
  );
};

export default BouquetCard;
